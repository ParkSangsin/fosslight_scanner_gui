name: Release fosslight_scanner_gui

on:
  release:
    types: [published]

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            ASSET_MIME: application/gzip
          - os: macos-latest
            TARGET: macos
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              yarn &&
              yarn build &&
              move dist/your_executable.exe fosslight-gui-windows.exe
            OUT_FILE_NAME: fosslight-gui-windows.exe
            ASSET_MIME: application/octet-stream
    steps:
    - uses: actions/checkout@v3
    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: yarn install
    - name: Build with yarn for ${{ matrix.TARGET }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        if [ "${{ matrix.TARGET }}" == "ubuntu" ]; then
          yarn build
          tar -czf fosslight-gui-${{ matrix.TARGET }}-setup-${{ env.VERSION }}.tar.gz -C dist/linux-unpacked .
        elif [ "${{ matrix.TARGET }}" == "macos" ]; then
          yarn build:mac
          ditto -c -k --sequesterRsrc --keepParent "dist/mac/fosslight_gui.app" fosslight-gui-${{ matrix.TARGET }}-setup-${{ env.VERSION }}.zip
        fi
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}    
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./fosslight-gui-${{ matrix.TARGET }}-setup-${{ env.VERSION }}.${{ matrix.TARGET == 'ubuntu' && 'tar.gz' || 'zip' }}
        asset_name: fosslight-gui-${{ matrix.TARGET }}-setup-${{ env.VERSION }}.${{ matrix.TARGET == 'ubuntu' && 'tar.gz' || 'zip' }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
